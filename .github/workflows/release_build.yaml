name: Release Build
on:
  push:
    tags:
      - 'v[0-9].[0-9]+.[0-9]+'
env:
  GO_VERSION: 1.19.4
jobs:
  cache-deps:
    name: cache-deps (linux)
    runs-on: ubuntu-20.04

    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Setup dep cache
        uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
      - name: Pull go deps
        run: go mod download

  lint:
    name: lint (linux)
    runs-on: ubuntu-20.04
    needs: cache-deps

    permissions:
      contents: read

    steps:
      - name: Lint
        run: echo "yay"

  unit-test:
    strategy:
      matrix:
        OS: [ubuntu-20.04, macos-latest]
    runs-on: ${{ matrix.OS }}
    needs: cache-deps

    permissions:
      contents: read

    steps:
      - name: Run unit tests
        run: echo "yay"

  unit-test-race-detector:
    name: unit-test (linux with race detection)
    runs-on: ubuntu-20.04
    needs: cache-deps

    permissions:
      contents: read

    steps:
      - name: Run unit tests
        run: echo "yay"

  artifacts:
    name: artifacts (linux)
    runs-on: ubuntu-20.04
    needs: [cache-deps]

    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Load cached deps
        uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
      - name: Load cached build tools
        uses: actions/cache@v3
        with:
          path: .build
          key: ${{ runner.os }}-tools-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-tools-
      - name: Build artifacts
        run: ./.github/workflows/scripts/build_artifacts.sh
      - name: Archive artifacts
        uses: actions/upload-artifact@v3
        with:
          name: binaries
          path: ./artifacts/

  images:
    name: images (linux)
    runs-on: ubuntu-20.04
    needs: [cache-deps]

    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Load cached deps
        uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
      - name: Load cached build tools
        uses: actions/cache@v3
        with:
          path: .build
          key: ${{ runner.os }}-tools-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-tools-
      - name: Build images
        run: make images
      - name: Export images
        run: docker save spire-server:latest-local spire-agent:latest-local k8s-workload-registrar:latest-local oidc-discovery-provider:latest-local | gzip > images.tar.gz
      - name: Archive images
        uses: actions/upload-artifact@v3
        with:
          name: images
          path: images.tar.gz

  scratch-images:
    runs-on: ubuntu-20.04
    needs: [cache-deps]

    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Load cached deps
        uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
      - name: Load cached build tools
        uses: actions/cache@v3
        with:
          path: .build
          key: ${{ runner.os }}-tools-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-tools-
      - name: Build scratch images
        run: make scratch-images
      - name: Export scratch images
        run: docker save spire-server-scratch:latest-local spire-agent-scratch:latest-local k8s-workload-registrar-scratch:latest-local oidc-discovery-provider-scratch:latest-local | gzip > scratch-images.tar.gz
      - name: Archive scratch images
        uses: actions/upload-artifact@v3
        with:
          name: scratch-images
          path: scratch-images.tar.gz

  integration:
    name: integration (linux)
    runs-on: ubuntu-20.04
    needs: [cache-deps, images, scratch-images]

    permissions:
      contents: read

    strategy:
      fail-fast: false
      matrix:
        num_runners: [5]
        runner_id: [1, 2, 3, 4, 5]
    steps:
      - name: Run integration tests
        run: echo "yay"

  publish-artifacts:
    runs-on: ubuntu-20.04
    needs: [lint, unit-test, unit-test-race-detector, artifacts, integration]

    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Download archived artifacts
        uses: actions/download-artifact@v3
        with:
          name: binaries
          path: ./artifacts/
      - name: Create Release
        env:
          # GH_REPO is required for older releases of `gh`. Until we're
          # reasonably confident that that the gh release is new enough,
          # set GH_REPO to the repository to create the release in.
          #
          # See https://github.com/cli/cli/issues/3556
          GH_REPO: ${{ github.repository }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        # Create the release using the version number as the title
        run: gh release create "${GITHUB_REF#refs/tags/}" ./artifacts/*.tar.gz ./artifacts/*.txt --title "${GITHUB_REF#refs/tags/}"

  publish-images:
    runs-on: ubuntu-20.04
    needs: [lint, unit-test, unit-test-race-detector, artifacts, integration]

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Download archived images
        uses: actions/download-artifact@v3
        with:
          name: images
          path: .
      - name: Download archived scratch images
        uses: actions/download-artifact@v3
        with:
          name: scratch-images
          path: .
      - name: Load archived images
        run: zcat images.tar.gz | docker load
      - name: Load archived scratch images
        run: zcat scratch-images.tar.gz | docker load
      - name: Log in to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Push images
        run: ./.github/workflows/scripts/push-images.sh "${GITHUB_REF}" -scratch
